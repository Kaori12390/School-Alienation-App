import streamlit as st
import pandas as pd
import joblib

# Load m√¥ h√¨nh v√† scaler
model = joblib.load("logistic_model_tuned.pkl")
scaler = joblib.load("scaler.pkl")
input_features = joblib.load("input_features.pkl")

st.set_page_config(page_title="D·ª± ƒëo√°n xa l√°nh h·ªçc ƒë∆∞·ªùng", layout="wide")

# ===== Gi·ªõi thi·ªáu =====
st.markdown("""
    <div style="background-color:#17665D;padding:2rem;border-radius:10px">
        <h1 style="color:white">üìò Kh·∫£o S√°t V·ªÅ Tr·∫£i Nghi·ªám H·ªçc ƒê∆∞·ªùng</h1>
        <p style="color:white;font-size:1.1rem">Ch√†o em,<br>
        Anh/ch·ªã ƒëang th·ª±c hi·ªán m·ªôt kh·∫£o s√°t ƒë·ªÉ t√¨m hi·ªÉu tr·∫£i nghi·ªám h·ªçc ƒë∆∞·ªùng c·ªßa h·ªçc sinh THPT. Nh·ªØng chia s·∫ª ch√¢n th·∫≠t c·ªßa em s·∫Ω gi√∫p b·ªçn anh/ch·ªã hi·ªÉu h∆°n v·ªÅ c·∫£m nh·∫≠n v√† suy nghƒ© c·ªßa h·ªçc sinh nh∆∞ em trong qu√° tr√¨nh h·ªçc t·∫≠p t·∫°i tr∆∞·ªùng.<br>
        Kh√¥ng c√≥ c√¢u tr·∫£ l·ªùi ƒë√∫ng hay sai ƒë√¢u, n√™n em h√£y tr·∫£ l·ªùi theo ƒë√∫ng c·∫£m nh·∫≠n c·ªßa m√¨nh nh√©. C·∫£m ∆°n em r·∫•t nhi·ªÅu üíö</p>
    </div>
""", unsafe_allow_html=True)

# ===== Th√¥ng tin c√° nh√¢n =====
st.header("1. Th√¥ng tin c√° nh√¢n")
info = {}
col1, col2 = st.columns(2)
with col1:
    info["1. NƒÉm sinh"] = st.text_input("1. NƒÉm sinh")
    info["2. L·ªõp"] = st.selectbox("2. B·∫°n ƒëang h·ªçc l·ªõp m·∫•y?", ["10", "11", "12"])
    info["3. Gi·ªõi t√≠nh"] = st.radio("3. Gi·ªõi t√≠nh", ["Nam", "N·ªØ", "Kh√°c"])
    info["4. Tr∆∞·ªùng ƒëang h·ªçc"] = st.text_input("4. Tr∆∞·ªùng b·∫°n ƒëang h·ªçc")
    info["5. ƒêi·ªÉm TB h·ªçc k·ª≥ tr∆∞·ªõc"] = st.selectbox("5. ƒêi·ªÉm trung b√¨nh h·ªçc k·ª≥ tr∆∞·ªõc", ["<3.5", "3.5‚Äì5.0", "5.0‚Äì6.5", "6.5‚Äì8.0", ">8.0"])
    info["6. X·∫øp lo·∫°i h·ªçc l·ª±c"] = st.selectbox("6. X·∫øp lo·∫°i h·ªçc l·ª±c h·ªçc k·ª≥ tr∆∞·ªõc", ["Y·∫øu", "Trung b√¨nh", "Kh√°", "Gi·ªèi"]) 
with col2:
    info["7. S·ªëng v·ªõi ai"] = st.selectbox("7. B·∫°n ƒëang s·ªëng v·ªõi ai?", ["B·ªë m·∫π", "Ch·ªâ b·ªë", "Ch·ªâ m·∫π", "Ng∆∞·ªùi th√¢n kh√°c"])
    info["8. H·ªçc v·∫•n c·ªßa m·∫π"] = st.selectbox("8. Tr√¨nh ƒë·ªô h·ªçc v·∫•n c·ªßa m·∫π", ["Ti·ªÉu h·ªçc", "THCS", "THPT", "ƒê·∫°i h·ªçc", "Sau ƒë·∫°i h·ªçc"])
    info["9. Ngh·ªÅ nghi·ªáp c·ªßa m·∫π"] = st.text_input("9. Ngh·ªÅ nghi·ªáp c·ªßa m·∫π")
    info["10. Thu nh·∫≠p m·∫π"] = st.selectbox("10. Thu nh·∫≠p trung b√¨nh th√°ng c·ªßa m·∫π", ["<5 tri·ªáu", "5‚Äì10 tri·ªáu", "10‚Äì15 tri·ªáu", ">15 tri·ªáu"])
    info["11. H·ªçc v·∫•n c·ªßa b·ªë"] = st.selectbox("11. Tr√¨nh ƒë·ªô h·ªçc v·∫•n c·ªßa b·ªë", ["Ti·ªÉu h·ªçc", "THCS", "THPT", "ƒê·∫°i h·ªçc", "Sau ƒë·∫°i h·ªçc"])
    info["12. Ngh·ªÅ nghi·ªáp c·ªßa b·ªë"] = st.text_input("12. Ngh·ªÅ nghi·ªáp c·ªßa b·ªë")
    info["13. Thu nh·∫≠p b·ªë"] = st.selectbox("13. Thu nh·∫≠p trung b√¨nh th√°ng c·ªßa b·ªë", ["<5 tri·ªáu", "5‚Äì10 tri·ªáu", "10‚Äì15 tri·ªáu", ">15 tri·ªáu"])

# ===== B·ªô c√¢u h·ªèi kh·∫£o s√°t =====
st.header("2. B·ªô c√¢u h·ªèi kh·∫£o s√°t")

# C√¢u h·ªèi nh√≥m H·ªçc t·∫≠p
hoc_tap = {
    "18.1": "M√¨nh c·∫£m th·∫•y m√¨nh c√≥ gi√° tr·ªã h∆°n khi h·ªçc t·ªët",
    "18.2": "M√¨nh c·∫£m th·∫•y t·ªá h∆°n n·∫øu k·∫øt qu·∫£ h·ªçc t·∫≠p k√©m",
    "18.3": "Vi·ªác h·ªçc t·ªët khi·∫øn m√¨nh th·∫•y b·∫£n th√¢n ƒë√°ng t·ª± h√†o",
    "18.4": "M√¨nh c·∫£m th·∫•y m√¨nh c√≥ gi√° tr·ªã h∆°n khi ƒë·∫°t th√†nh t√≠ch t·ªët",
    "18.5": "M√¨nh c·∫£m th·∫•y t·ª± ti h∆°n khi k·∫øt qu·∫£ h·ªçc t·∫≠p kh√¥ng t·ªët",
    "19.1": "M√¨nh mong ƒë·ª£i ƒë∆∞·ª£c h·ªçc ·ªü tr∆∞·ªùng",
    "19.2": "M√¨nh th√≠ch nh·ªØng g√¨ ƒë∆∞·ª£c h·ªçc ·ªü tr∆∞·ªùng",
    "19.3": "Nh·ªØng g√¨ h·ªçc ·ªü tr∆∞·ªùng r·∫•t nh√†m ch√°n",
    "19.4": "Vi·ªác h·ªçc ·ªü tr∆∞·ªùng r·∫•t th√∫ v·ªã",
    "19.5": "M√¨nh kh√¥ng th·∫•y h·ª©ng th√∫ v·ªõi vi·ªác h·ªçc ·ªü tr∆∞·ªùng",
    "19.6": "Nh·ªØng ƒëi·ªÅu h·ªçc ·ªü tr∆∞·ªùng kh√¥ng h·ªØu √≠ch trong cu·ªôc s·ªëng",
    "19.7": "M√¨nh th·∫•y nh·ªØng th·ª© ph·∫£i h·ªçc ·ªü tr∆∞·ªùng th·∫≠t v√¥ d·ª•ng",
    "19.8": "H·ªçc ·ªü tr∆∞·ªùng l√† l√£ng ph√≠ th·ªùi gian"
}

# C√¢u h·ªèi nh√≥m Gi√°o vi√™n
giao_vien = {
    "16.1": "N·∫øu m√¨nh h·ªçc chƒÉm ch·ªâ th√¨ th·∫ßy c√¥ s·∫Ω qu√Ω tr·ªçng m√¨nh h∆°n",
    "16.2": "N·∫øu m√¨nh l√†m b√†i ki·ªÉm tra t·ªët th√¨ th·∫ßy c√¥ s·∫Ω ch·∫•p nh·∫≠n m√¨nh h∆°n",
    "16.3": "N·∫øu m√¨nh h·ªçc gi·ªèi th√¨ th·∫ßy c√¥ s·∫Ω quan t√¢m ƒë·∫øn m√¨nh h∆°n",
    "16.4": "N·∫øu m√¨nh h·ªçc t·ªët th√¨ th·∫ßy c√¥ s·∫Ω th√≠ch m√¨nh h∆°n",
    "16.5": "N·∫øu m√¨nh h·ªçc gi·ªèi th√¨ th·∫ßy c√¥ s·∫Ω th√¢n thi·ªán v·ªõi m√¨nh h∆°n",
    "17.1": "N·∫øu m√¨nh kh√¥ng h·ªçc chƒÉm ch·ªâ th√¨ th·∫ßy c√¥ s·∫Ω √≠t qu√Ω tr·ªçng m√¨nh",
    "17.2": "N·∫øu m√¨nh l√†m b√†i ki·ªÉm tra kh√¥ng t·ªët th√¨ th·∫ßy c√¥ s·∫Ω √≠t ch·∫•p nh·∫≠n m√¨nh",
    "17.3": "N·∫øu m√¨nh h·ªçc kh√¥ng t·ªët th√¨ th·∫ßy c√¥ s·∫Ω √≠t quan t√¢m ƒë·∫øn m√¨nh",
    "17.4": "N·∫øu m√¨nh h·ªçc kh√¥ng t·ªët th√¨ th·∫ßy c√¥ s·∫Ω √≠t th√≠ch m√¨nh",
    "17.5": "N·∫øu m√¨nh h·ªçc kh√¥ng t·ªët th√¨ th·∫ßy c√¥ s·∫Ω b·ªõt th√¢n thi·ªán v·ªõi m√¨nh",
    "20.1": "Th·∫ßy c√¥ l√†m m√¨nh b·ª±c b·ªôi",
    "20.2": "M√¨nh c·∫£m th·∫•y ƒë∆∞·ª£c th·∫ßy c√¥ ch·∫•p nh·∫≠n",
    "20.3": "M√¨nh kh√¥ng th·∫•y tho·∫£i m√°i khi th·∫ßy c√¥ ·ªü g·∫ßn",
    "20.4": "M√¨nh kh√¥ng c·∫£m th·∫•y ƒë∆∞·ª£c th·∫ßy c√¥ coi tr·ªçng",
    "20.5": "M√¨nh nghƒ© th·∫ßy c√¥ kh√¥ng hi·ªÉu m√¨nh",
    "20.6": "M√¨nh nghƒ© th·∫ßy c√¥ kh√¥ng quan t√¢m ƒë·∫øn m√¨nh",
    "20.7": "M√¨nh nghƒ© th·∫ßy c√¥ kh√¥ng quan t√¢m ƒë·∫øn c·∫£m x√∫c c·ªßa m√¨nh",
    "20.8": "M√¨nh c√≥ th·ªÉ tin t∆∞·ªüng th·∫ßy c√¥"
}

# C√¢u h·ªèi nh√≥m B·∫°n b√®
ban_be = {
    "21.1": "B·∫°n b√® l√†m m√¨nh b·ª±c b·ªôi",
    "21.2": "M√¨nh c·∫£m th·∫•y ƒë∆∞·ª£c b·∫°n b√® ch·∫•p nh·∫≠n",
    "21.3": "M√¨nh c·∫£m th·∫•y m√¨nh kh√¥ng ph√π h·ª£p v·ªõi l·ªõp",
    "21.4": "M√¨nh vui khi ƒë∆∞·ª£c l√† m·ªôt ph·∫ßn c·ªßa l·ªõp",
    "21.5": "M√¨nh th·∫•y tr∆∞·ªùng h·ªçc l√† n∆°i tuy·ªát v·ªùi v√¨ c√≥ nhi·ªÅu b·∫°n b√®",
    "21.6": "M√¨nh kh√¥ng quan t√¢m ƒë·∫øn b·∫°n h·ªçc",
    "21.7": "M√¨nh nghƒ© m√¨nh c√≥ th·ªÉ tin t∆∞·ªüng b·∫°n h·ªçc",
    "21.8": "L·ªõp h·ªçc c·ªßa m√¨nh r·∫•t tuy·ªát"
}

def render_block(title, questions):
    st.subheader(title)
    answers = {}
    for q_num, q_text in questions.items():
        with st.container():
            st.markdown(f"<div style='background-color:#f0f0f0;padding:1rem;border-radius:10px;margin-bottom:1rem'><strong>{q_num}. {q_text}</strong></div>", unsafe_allow_html=True)
            answers[q_num] = st.radio("", [1, 2, 3, 4, 5], horizontal=True, key=q_num)
    return answers

res_ht = render_block("üìò H·ªçc t·∫≠p", hoc_tap)
res_gv = render_block("üë®‚Äçüè´ Gi√°o vi√™n", giao_vien)
res_bb = render_block("üßë‚Äçü§ù‚Äçüßë B·∫°n b√®", ban_be)

# ===== D·ª± ƒëo√°n =====
if st.button("D·ª± ƒëo√°n"):
    all_responses = {**res_ht, **res_gv, **res_bb}
    model_input = {k: all_responses.get(k, 3) for k in input_features}
    df_input = pd.DataFrame([model_input])

    reverse_cols = []  # th√™m n·∫øu c·∫ßn
    for col in reverse_cols:
        if col in df_input.columns:
            df_input[col] = df_input[col].apply(lambda x: 6 - x)

    df_scaled = scaler.transform(df_input[input_features])
    result = model.predict(df_scaled)[0]

    labels = {
        1: "üü¢ M·ª©c ƒë·ªô TH·∫§P",
        2: "üü° M·ª©c ƒë·ªô V·ª™A",
        3: "üî¥ M·ª©c ƒë·ªô CAO"
    }
    st.success(f"‚úÖ K·∫øt qu·∫£ d·ª± ƒëo√°n: **{labels[result]}**")

